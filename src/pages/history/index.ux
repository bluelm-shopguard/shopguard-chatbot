<template>
  <div class="page {{themeClass}}">
    <div class="header">
      <div class="back-button" onclick="goBack">
        <text class="back-icon">←</text>
      </div>
      <text class="header-title">历史记录</text>
    </div>
    
    <list class="history-list">
      <block if="{{historyItems.length === 0}}">
        <list-item type="empty-item">
          <div class="empty-container">
            <text class="empty-text">暂无历史记录</text>
          </div>
        </list-item>
      </block>
      
      <block for="{{historyItems}}" tid="date">
        <list-item type="history-item">
          <div class="history-item" onclick="viewHistory($item)">
            <div class="history-date">
              <text>{{formatDate($item.date)}}</text>
            </div>
            <div class="history-preview">
              <text class="preview-text">{{$item.preview}}</text>
              <text class="message-count">{{$item.messageCount}}条消息</text>
            </div>
            <text class="arrow">›</text>
          </div>
        </list-item>
      </block>
    </list>
  </div>
</template>

<script>
import router from '@system.router'

export default {
  data() {
    return {
      historyItems: [],
      themeClass: 'light-theme' // Default theme class
    }
  },
  
  onInit() {
    // Initialize data
    this.loadHistoryItems()
    this.applyCurrentTheme()
  },

  onShow() {
    this.applyCurrentTheme()
  },
  
  methods: {
    applyCurrentTheme() {
      try {
        const app = this.$app.$def
        if (app && app.globalData && app.globalData.themeManager) {
          const themeClass = app.globalData.themeManager.getThemeClass()
          
          if (this.themeClass !== themeClass) {
            this.themeClass = themeClass
            console.log(`[HistoryPage] Applied theme: ${this.themeClass}`)
          }
        } else {
          this.themeClass = 'light-theme'
        }
      } catch (error) {
        console.error('Error applying current theme to history page:', error)
        this.themeClass = 'light-theme'
      }
    },

    // Load history items
    loadHistoryItems() {
      // This would normally load from storage
      // For now, we'll just have an empty list
      this.historyItems = []
    },
    
    // Format date
    formatDate(dateString) {
      const date = new Date(dateString)
      return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`
    },
    
    // View a specific history item
    viewHistory(item) {
      // Would navigate to a detail view
      console.log('View history item:', item)
    },
    
    // Go back to home
    goBack() {
      router.back()
    }
  }
}
</script>

<style>
.page {
  flex-direction: column;
  background-color: var(--background-color, #f5f5f5);
  width: 100%;
  height: 100%;
}

.header {
  flex-direction: row;
  align-items: center;
  padding: 20px;
  background-color: var(--header-background-color, #ffffff);
  width: 100%;
}

.back-button {
  width: 60px;
  height: 60px;
  align-items: center;
  justify-content: center;
}

.back-icon {
  font-size: 36px;
  color: var(--text-color-primary, #333333);
}

.header-title {
  flex: 1;
  font-size: 36px;
  font-weight: bold;
  text-align: center;
  margin-right: 60px;
  color: var(--text-color-primary, #333333);
}

.history-list {
  flex: 1;
  width: 100%;
}

.empty-container {
  width: 100%;
  padding: 100px 0;
  align-items: center;
  justify-content: center;
}

.empty-text {
  color: var(--text-color-secondary, #999999);
  font-size: 32px;
}

.history-item {
  flex-direction: column;
  padding: 30px;
  background-color: var(--list-item-background-color, #ffffff);
  border-bottom-width: 1px;
  border-bottom-color: var(--border-color, #eeeeee);
}

.history-date {
  margin-bottom: 10px;
}

.history-date text {
  font-size: 28px;
  color: var(--text-color-secondary, #666666);
}

.history-preview {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.preview-text {
  flex: 1;
  font-size: 32px;
  color: var(--text-color-primary, #333333);
}

.message-count {
  font-size: 28px;
  color: var(--text-color-secondary, #999999);
  margin-right: 10px;
}

.arrow {
  font-size: 36px;
  color: var(--icon-color, #bbbbbb);
}
</style>
